#!/bin/bash
scriptname=${0##*/}

usage(){
    cat <<EOF
$scriptname -h -l -s -p []  --list --lab

Options:
	-h     Help
  	-l     Launch Server(s)
	-s     Stop Server(s)
	-p []  Port
	--list List Notebook servers
	--lab  Launch lab instead of notebook

Show running Notebook Servers
jupyter notebook list

or
$scriptname --list

Change Notebook Password:
jupyter notebook password

Last Change: Mit Okt  3 10:10:40 CEST 2018
Author: MB
EOF
}

check(){
    exe_kill=$1
    echo "Running Notebook Servers $(hostname):"
    ii=0
    while read p; do
	NPID=$(echo "$p" | awk '{print $2}')
	PORTID=$(echo "$p" | grep -oP '(?<=port\s)\w+')
	if $exe_kill; then
	    echo "Shuting down ($NPID) with: https://$(hostname):$PORTID/ipython/"
	    kill $NPID > /dev/null
	else
	    echo "Access notebook (kill $NPID) with: https://$(hostname):$PORTID/ipython/"
	fi
        ii=$((ii+1))
    done < <(ps ux | grep jupyter | grep -v grep | grep -v kernel)
    if [ $ii -eq 0 ]; then
        echo "None"
    fi
}

#
#  INPUT
#

TEMP=`getopt -o lshp:o: --long list,lab -n 'nb_server' -- "$@"`
eval set -- "$TEMP"

app=notebook
options=""
PORT=8888
limit=1

do_start=false
do_stop=false

while true; do
    case "$1" in
        -l) do_start=true; shift;;
	-s) do_stop=true; shift;;
	-h) usage; exit 1 ;;
	-p) PORT=$2; shift;shift ;;
	--list) check false; exit 0;;
	--lab) app=lab; shift;;
        --) break ;;
        *) echo "Unknown option $1"; exit 1;;
    esac
done

if $do_stop; then
    check true
fi
if $do_start; then
    Nservers=$(ps ux | grep jupyter | grep -v grep | grep -v kernel | wc -l)
    if [ $Nservers -ge $limit ]; then
        echo "Server is running:"
        check false
        echo "Limit of Servers per User: $limit"
        exit 1
    fi
    

    nohup jupyter $app --port $PORT --no-browser > $HOME/.nb_server_$PORT.log &
    echo "Monitor Activity in $HOME/.nb_server_$PORT.log"
    check false
else
    usage
fi
    
